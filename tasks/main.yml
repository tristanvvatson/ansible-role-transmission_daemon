---

- name: Ensure group {{ sys_group }} exists
  group:
    name: "{{ sys_group }}"
    state: present

- name: Create user associated to Transmission
  tags: transmission
  user:
    user: "{{ sys_username }}"
    name: "{{ sys_group }}"
    group: "{{ sys_group }}"
    comment: "Transmission user" 

- name: Attempting to execute Debian related tasks, if applicable
  tags: transmission
  block:

    - name: Attempting to set os family specific facts
      set_fact:
        td_owner: "{{ sys_username }}"
        td_group: "{{ sys_group }}"
        td_settings: /etc/transmission-daemon/settings.json
    - name: Ensure that the transmission-daemon package is installed
      become: true
      become_method: sudo
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - libnatpmp1
        - transmission-daemon
  when: ansible_os_family == 'Debian'

- name: Attempting to execute RedHat related tasks, if applicable
  tags: transmission
  block:
    - name: Attempting to set os family specific facts
      set_fact:
        td_owner: "{{ sys_username }}"
        td_group: "{{ sys_group }}"
        td_settings: /var/lib/transmission/.config/transmission-daemon/settings.json
    - name: Ensure that the transmission-daemon package is installed
      become: true
      become_method: sudo
      yum:
        enablerepo: epel
        name: "{{ item }}"
        state: present
      loop:
        - libnatpmp
        - transmission-daemon
  when: ansible_os_family == 'RedHat'

- name: Attempting to append {{ td_owner }} user to groups, if applicable
  tags: transmission
  block:
    - name: Attempting to gather a list of system groups
      getent:
        database: group
        split: ':'
    - name: Attempting to append {{ td_owner }} user to groups
      become: true
      user:
        append: true
        groups: "{{ item }}"
        name: "{{ sys_username }}"
      loop: "{{ td_groups }}"
      when: item in getent_group
  when: td_groups|length > 0

- name: Ensure that the transmission-daemon configuration directories exists
  tags: transmission
  become: true
  file:
    path: "{{ item }}"
    owner: "{{ sys_username }}"
    group: "{{ sys_group }}"
    mode: 0755
    state: directory
  loop:
    - "{{ td_download_dir }}"
    - "{{ td_incomplete_dir }}"
    - "{{ td_settings|dirname }}"
    - /var/lib/transmission/.config
    - /var/lib/transmission/.config/transmission-daemon

- name: Attempting to overlay transmission-daemon configuration
  tags: transmission
  become: true
  template:
    src: settings.json.j2
    dest: "{{ td_settings }}"
    owner: "{{ sys_username }}"
    group: "{{ sys_group }}"
    mode: 0600
  notify: reload transmission-daemon

- name: Ensure that transmission-daemon is started and enabled on boot
  tags: transmission
  become: true
  service:
    enabled: "{{ td_service_enabled|bool }}"
    name: transmission-daemon
    state: started

- name: Attempting to execute blocklist related tasks, if applicable
  tags: transmission
  block:
    - name: Attempting to manually update blocklist
      command: |
        /usr/bin/transmission-remote {{ td_rpc_bind_address }}:{{ td_rpc_port }} --blocklist-update
    - name: Attempting to apply blocklist update cronjob
      become: true
      cron:
        cron_file: transmission-daemon
        job: "/usr/bin/transmission-remote {{ td_rpc_bind_address }}:{{ td_rpc_port }} --blocklist-update >/dev/null"
        name: Automatically update transmission-daemon blocklist
        special_time: weekly
        state: present
        user: "{{ sys_username }}"
  when:
    - td_blocklist_enabled|bool
    - td_blocklist_url is defined

- name: Attempting to execute torrent related tasks, if applicable
  tags: transmission
  block:
    - name: Attempting to create temporary directory
      tempfile:
        prefix: 'transmission-daemon.'
        state: directory
      register: transmission_daemon_tempfile
    - name: Attempting to fetch remote torrent files
      get_url:
        dest: "{{ transmission_daemon_tempfile.path }}"
        url: "{{ item }}"
      register: transmission_get_url
      loop: "{{ td_torrents }}"
    - name: Attempting to send torrents to transmission-daemon
      command: |
        /usr/bin/transmission-remote {{ td_rpc_bind_address }}:{{ td_rpc_port }} --add {{ item.dest }}
      loop: "{{ transmission_get_url.results }}"
      when: item.dest is defined
    - name: Attempting to purge temporary directory from filesystem
      file:
        path: "{{ transmission_daemon_tempfile.path }}"
        state: absent
  when: td_torrents|length > 0
...
